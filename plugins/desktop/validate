#!/usr/bin/perl -w

eval 'exec /usr/bin/perl -w -S $0 ${1+"$@"}'
    if 0; # not running under some shell
###############################################################################
# Sanity check plugin for the Krazy project.                                  #
# Copyright (C) 2007 by Allen Winter <winter@kde.org>                         #
#                                                                             #
# This program is free software; you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation; either version 2 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with this program; if not, write to the Free Software Foundation, Inc.,     #
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.               #
#                                                                             #
###############################################################################

# FDO desktop file validator.

# Program options:
#   --help:          print one-line help message and exit
#   --version:       print one-line version information and exit
#   --explain:       print an explanation with solving instructions, then exit
#   --installed      file is to be installed
#   --quiet:         suppress all output messages
#   --verbose:       print the offending content

# Exits with status=0 if test condition is not present in the source;
# else exits with the number of failures encountered.

use strict;
use Getopt::Long;
use FindBin qw($Bin);

my($Prog) = "validate";
my($Version) = "1.0";
my($help) = '';
my($version) = '';
my($explain) = '';
my($installed) = '';
my($quiet) = '';
my($verbose) = '';

exit 1
if (!GetOptions('help' => \$help, 'version' => \$version,
                'explain' => \$explain, 'installed' => \$installed,
                'verbose' => \$verbose, 'quiet' => \$quiet));

&Help() if $help;
&Version() if $version;
&Explain() if $explain;
if ($#ARGV != 0){ &Help(); exit 0; }

my($f) = $ARGV[0];

my($valp) = "$Bin/../../krazy-helpers/desktop-file-validate";

my($cnt) = &processFile($f);
if (!$cnt) {
  print "okay\n" if (!$quiet);
  exit 0;
} else {
  exit $cnt;
}

sub Help {
  print "Validates desktop files using 'desktop-file-validate'\n";
  exit 0 if $help;
}

sub Version {
  print "$Prog, version $Version\n";
  exit 0 if $version;
}

sub Explain {
  print "Please make sure your .desktop files conform to the freedesktop.org standard. See the spec at <http://standards.freedesktop.org/desktop-entry-spec/latest>\n";
  exit 0 if $explain;
}

sub processFile() {
  my($in) = @_;
  my($line,$result);
  my($cnt)=0;
  open(VAL, "$valp --warn-kde $in | ") || print STDERR "Cannot run: desktop-file-validate\n";
  while($line = <VAL>) {
    chomp($line);
    $result = &analyze($line);
    if ($result && $line) {
      $cnt++;
      $line =~ s+^$f:\s*++;
      $line =~ s+^warning:\s*++;
      $line =~ s+^error:\s*++;
      print "$line\n" if (!$quiet);
    }
  }
  close(VAL);
  return $cnt;
}

sub analyze() {
  my($line) = @_;

  if ($line =~ m+: error:+) {
    return "ERROR";
  }
  if ($line =~ m+: warning:+) {
    return "WARNING";
  }
  return "";
}
